<script>
        (function () {
            let isLockdownActive = true;
            let debuggerIntervalId = null;
            let devToolsCheckIntervalId = null;
            const cssStyles = `
                #custom-context-menu {
                    display: none; position: absolute; z-index: 1000; width: 200px;
                    background-color: #ffffff; border-radius: 8px;
                    box-shadow: 0 5px 15px rgba(0,0,0,0.2); padding: 8px 0;
                    font-size: 14px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
                }
                .context-menu-item {
                    padding: 10px 20px; cursor: pointer; display: flex; align-items: center;
                    transition: background-color 0.2s, color 0.2s;
                }
                .context-menu-item:hover { background-color: #007bff; color: white; }
                .context-menu-item.disabled { color: #aaa; cursor: not-allowed; }
                .context-menu-item.disabled:hover { background-color: #f5f5f5; color: #aaa; }
                .context-menu-separator { height: 1px; background-color: #eeeeee; margin: 4px 0; }
                #custom-message-box {
                    display: none; position: fixed; top: 20px; left: 50%;
                    transform: translateX(-50%); background-color: #333; color: white;
                    padding: 12px 24px; border-radius: 8px;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.2); z-index: 2000;
                    opacity: 0; transition: opacity 0.3s ease-in-out;
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
                }
            `;
            const styleSheet = document.createElement("style");
            styleSheet.innerText = cssStyles;
            document.head.appendChild(styleSheet);
            document.body.classList.add('lockdown-active');
            const menuHtml = `
                <div id="custom-context-menu">
                    <div class="context-menu-item" id="menu-copy">Copy</div>
                    <div class="context-menu-item" id="menu-paste">Paste</div>
                    <div class="context-menu-separator"></div>
                    <div class="context-menu-item disabled" id="menu-minimize">Minimize (Disabled)</div>
                    <div class="context-menu-item disabled" id="menu-close">Close App (Disabled)</div>
                </div>
                <div id="custom-message-box"></div>
            `;
            const menuContainer = document.createElement("div");
            menuContainer.innerHTML = menuHtml;
            document.body.appendChild(menuContainer);
            const contextMenu = document.getElementById('custom-context-menu');
            const messageBox = document.getElementById('custom-message-box');
            let messageTimer;
            function showMessage(message, duration = 3000) {
                clearTimeout(messageTimer);
                messageBox.textContent = message;
                messageBox.style.display = 'block';
                setTimeout(() => { messageBox.style.opacity = '1'; }, 10);
                messageTimer = setTimeout(() => {
                    messageBox.style.opacity = '0';
                    setTimeout(() => { messageBox.style.display = 'none'; }, 300);
                }, duration);
            }
            function startAggressiveDeterrents() {
                stopAggressiveDeterrents();
                debuggerIntervalId = setInterval(function () {
                    try {
                        (function (counter) {
                            if (('' + counter / counter).length !== 1 || counter % 20 === 0) {
                                (function () { }).constructor('debugger')();
                            } else {
                                (function () { }).constructor('debugger')();
                            }
                            arguments.callee(++counter);
                        })(0);
                    } catch (e) { }
                }, 2000);
                devToolsCheckIntervalId = setInterval(function () {
                    const threshold = 160;
                    if (window.outerWidth - window.innerWidth > threshold || window.outerHeight - window.innerHeight > threshold) {
                        document.body.innerHTML = `<div style="text-align:center; padding: 50px; font-family: sans-serif;"><h1>Developer Tools Detected.</h1><p>Please close them to continue.</p></div>`;
                    }
                }, 1000);
            }
            function stopAggressiveDeterrents() {
                clearInterval(debuggerIntervalId);
                clearInterval(devToolsCheckIntervalId);
            }
            function toggleLockdown() {
                isLockdownActive = !isLockdownActive;
                document.body.classList.toggle('lockdown-active', isLockdownActive);
                if (isLockdownActive) {
                    startAggressiveDeterrents();
                    showMessage('Lockdown Mode RE-ACTIVATED.', 2000);
                } else {
                    stopAggressiveDeterrents();
                    showMessage('ADMIN OVERRIDE: Lockdown DISABLED.', 3000);
                }
            }
            document.addEventListener('contextmenu', function (event) {
                if (!isLockdownActive) return;
                event.preventDefault();
                const x = event.clientX, y = event.clientY;
                const menuWidth = contextMenu.offsetWidth, menuHeight = contextMenu.offsetHeight;
                contextMenu.style.top = `${y + menuHeight > window.innerHeight ? y - menuHeight : y}px`;
                contextMenu.style.left = `${x + menuWidth > window.innerWidth ? x - menuWidth : x}px`;
                contextMenu.style.display = 'block';
            });
            document.addEventListener('click', () => { contextMenu.style.display = 'none'; });
            document.addEventListener('keydown', function (event) {
                if (event.ctrlKey && event.shiftKey && event.altKey && (event.key === 'y' || event.key === 'Y')) {
                    event.preventDefault();
                    toggleLockdown();
                    return;
                }
                if (!isLockdownActive) return;
                if (event.key === 'F12' || (event.ctrlKey && event.shiftKey && ['I', 'J', 'C'].includes(event.key.toUpperCase())) || (event.ctrlKey && ['s', 'p', 'u'].includes(event.key))) {
                    event.preventDefault();
                    showMessage(`Function disabled: ${event.key}`);
                }
            });
            document.getElementById('menu-copy').addEventListener('click', () => {
                document.execCommand('copy');
                showMessage('Copy command issued.');
            });
            document.getElementById('menu-paste').addEventListener('click', () => {
                try {
                    navigator.clipboard.readText().then(text => {
                        const el = document.activeElement;
                        if (el && (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT')) {
                            const start = el.selectionStart, end = el.selectionEnd;
                            el.value = el.value.substring(0, start) + text + el.value.substring(end);
                            el.selectionStart = el.selectionEnd = start + text.length;
                            showMessage('Pasted from clipboard!');
                        } else { showMessage('Please click in a text field to paste.'); }
                    });
                } catch (e) { showMessage('Paste failed. Browser may require permissions.'); }
            });
            document.getElementById('menu-minimize').addEventListener('click', () => showMessage('Minimize is not possible from a web page.'));
            document.getElementById('menu-close').addEventListener('click', () => showMessage('Closing the app is not possible from a web page.'));
            startAggressiveDeterrents();
        })();
</script>