
Attribute VB_Name = "modStartup"
Public AppSettings As clsSettings
Public LastReceiptNumber As Long
Public Const CUSTOM_XML_PART_ID As String = "{B571A910-E5E3-4F8A-850D-47F1C9907A94}" ' Unique GUID for settings
Public Const APP_VERSION As String = "1.0.0"

Sub AutoNew()
    ' Runs when a new document is created from this template
    InitializeApp
End Sub

Sub Document_Open()
    ' Runs when the document is opened
    InitializeApp
End Sub

Sub InitializeApp()
    On Error GoTo ErrorHandler
    Dim fso As Object
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    ' Ensure necessary directories exist
    If Not fso.FolderExists(modUtils.GetAppFolderPath & "Receipts") Then
        fso.CreateFolder modUtils.GetAppFolderPath & "Receipts"
    End If
    If Not fso.FolderExists(modUtils.GetAppFolderPath & "Receipts\db") Then
        fso.CreateFolder modUtils.GetAppFolderPath & "Receipts\db"
    End If
    If Not fso.FolderExists(modUtils.GetAppFolderPath & "logs") Then
        fso.CreateFolder modUtils.GetAppFolderPath & "logs"
    End If
    
    ' Load settings
    Set AppSettings = New clsSettings
    AppSettings.LoadSettingsFromCustomXML
    
    ' Load last receipt number
    LastReceiptNumber = AppSettings.NextReceiptCounter
    
    ' Apply initial UI settings
    modLocalization.ApplyLocalization AppSettings.UrduMode
    modPDFPrint.ApplyTemplate AppSettings.DefaultTemplate
    
    ' Update Ribbon UI
    modUI.UpdateRibbonState
    
    modUtils.LogAction "Application Initialized. Version: " & APP_VERSION
    Exit Sub
ErrorHandler:
    modUtils.LogError "InitializeApp", Err
End Sub

Sub App_SelfTest()
    On Error GoTo ErrorHandler
    modUtils.LogAction "Running self-test..."
    
    ' Simulate New Receipt
    modUI.NewReceipt_Click Nothing
    
    ' Populate some dummy data for the self-test
    If Not frmNewReceipt Is Nothing Then
        With frmNewReceipt
            .txtCustomerName.Text = "Self Test Customer"
            .txtCustomerPhone.Text = "03001234567"
            .txtCustomerEmail.Text = "test@example.com"
            .txtCashierName.Text = "Test Cashier"
            .txtNotes.Text = "This is a self-test receipt generated by the application."
            
            ' Add some items
            .lstItems.AddItem
            .lstItems.List(.lstItems.ListCount - 1, 0) = "SKU001"
            .lstItems.List(.lstItems.ListCount - 1, 1) = "Sample Item 1"
            .lstItems.List(.lstItems.ListCount - 1, 2) = "2" ' Qty
            .lstItems.List(.lstItems.ListCount - 1, 3) = "150.00" ' Unit Price
            .lstItems.List(.lstItems.ListCount - 1, 4) = "0.0" ' Discount %
            .lstItems.List(.lstItems.ListCount - 1, 5) = "10.0" ' Tax % (example)
            .UpdateLineItem .lstItems.ListCount - 1 ' Recalculate and update listbox
            
            .lstItems.AddItem
            .lstItems.List(.lstItems.ListCount - 1, 0) = "SKU002"
            .lstItems.List(.lstItems.ListCount - 1, 1) = "Sample Item 2 (Long Name For Testing Layout)"
            .lstItems.List(.lstItems.ListCount - 1, 2) = "1" ' Qty
            .lstItems.List(.lstItems.ListCount - 1, 3) = "500.00" ' Unit Price
            .lstItems.List(.lstItems.ListCount - 1, 4) = "5.0" ' Discount %
            .lstItems.List(.lstItems.ListCount - 1, 5) = "10.0" ' Tax %
            .UpdateLineItem .lstItems.ListCount - 1
            
            ' Add another item for Urdu test
            .lstItems.AddItem
            .lstItems.List(.lstItems.ListCount - 1, 0) = "SKU003"
            .lstItems.List(.lstItems.ListCount - 1, 1) = "نمونہ آئٹم" ' Urdu Name
            .lstItems.List(.lstItems.ListCount - 1, 2) = "3" ' Qty
            .lstItems.List(.lstItems.ListCount - 1, 3) = "75.50" ' Unit Price
            .lstItems.List(.lstItems.ListCount - 1, 4) = "0.0" ' Discount %
            .lstItems.List(.lstItems.ListCount - 1, 5) = "10.0" ' Tax %
            .UpdateLineItem .lstItems.ListCount - 1
            
            ' Simulate apply changes
            .ComputeTotals ' Ensure totals are calculated
            
            ' Generate the receipt in the document
            modReceipt.GenerateReceiptInDocument .GetReceiptData()
            
            ' Simulate saving the receipt
            modStorage.SaveReceipt .GetReceiptData()
            
            ' Simulate exporting to PDF
            modPDFPrint.ExportToPDF modReceipt.CurrentReceipt.Id
            
            MsgBox "Self-test complete. Check generated receipt in document and exported PDF.", vbInformation, "Self-Test"
            
            ' Optional: Toggle Urdu mode and re-export
            AppSettings.UrduMode = Not AppSettings.UrduMode
            AppSettings.SaveSettingsToCustomXML
            modLocalization.ApplyLocalization AppSettings.UrduMode
            
            ' Re-generate receipt with new settings
            modReceipt.GenerateReceiptInDocument .GetReceiptData()
            modPDFPrint.ExportToPDF modReceipt.CurrentReceipt.Id & "_Urdu"
            
            MsgBox "Self-test with Urdu mode complete. Check generated receipt and PDF.", vbInformation, "Self-Test"
            AppSettings.UrduMode = Not AppSettings.UrduMode ' Revert
            AppSettings.SaveSettingsToCustomXML
            modLocalization.ApplyLocalization AppSettings.UrduMode
            
            .Hide
        End With
    End If
    
    modUtils.LogAction "Self-test finished."
    Exit Sub
ErrorHandler:
    modUtils.LogError "App_SelfTest", Err
End Sub
